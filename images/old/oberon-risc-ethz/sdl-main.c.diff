--- osrc/sdl-main.c	2014-06-21 08:47:25.000000000 -0700
+++ src/sdl-main.c	2014-06-21 11:48:24.000000000 -0700
@@ -21,8 +21,8 @@
 //static uint32_t BLACK = 0x0000FF, WHITE = 0xFFFF00;
 //static uint32_t BLACK = 0x000000, WHITE = 0x00FF00;
 
-#define MAX_HEIGHT 2048
-#define MAX_WIDTH  2048
+#define MAX_HEIGHT 2560
+#define MAX_WIDTH  1800
 
 static void update_texture(struct RISC *risc, SDL_Texture *texture, const SDL_Rect *risc_rect);
 static double scale_display(SDL_Window *window, const SDL_Rect *risc_rect, SDL_Rect *display_rect);
@@ -30,7 +30,7 @@
 
 
 static void usage() {
-  fprintf(stderr, "Usage: risc [--fullscreen] [--size <width>x<height>] disk-file-name\n");
+  fprintf(stderr, "Usage: risc [--fullscreen] [--1G] [--size <width>x<height>] disk-file-name\n");
   exit(1);
 }
 
@@ -58,6 +58,7 @@
 
 static struct option long_options[] = {
   { "fullscreen", no_argument,       NULL, 'f' },
+  { "1G",         no_argument,       NULL, 'g' },
   { "size",       required_argument, NULL, 's' },
   { "serial-fd",  required_argument, NULL, 'F' },
   { NULL }
@@ -88,9 +89,18 @@
         }
         risc_rect.w = clamp(w, 32, MAX_WIDTH) & ~31;
         risc_rect.h = clamp(h, 32, MAX_HEIGHT);
+        if (risc_rect.h < 768){
+          risc_rect.y = RISC_FRAMEBUFFER_HEIGHT - risc_rect.h;
+        }else{
+          risc_rect.y = 0;
+        }
         risc_screen_size_hack(risc, risc_rect.w, risc_rect.h);
         break;
       }
+      case 'g': {
+        risc_change_bootrom(risc);
+        break;
+      }
       case 'F': {
         risc_set_serial(risc, raw_serial_new(atoi(optarg), atoi(optarg) + 1));
         break;
